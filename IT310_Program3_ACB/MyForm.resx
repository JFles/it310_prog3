<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>